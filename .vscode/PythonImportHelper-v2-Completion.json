[
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "django.db",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db",
        "description": "django.db",
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "django",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django",
        "description": "django",
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "WebsocketConsumer",
        "importPath": "channels.generic.websocket",
        "description": "channels.generic.websocket",
        "isExtraImport": true,
        "detail": "channels.generic.websocket",
        "documentation": {}
    },
    {
        "label": "WebSocketConsumer",
        "importPath": "channels.generic.websocket",
        "description": "channels.generic.websocket",
        "isExtraImport": true,
        "detail": "channels.generic.websocket",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "async_to_sync",
        "importPath": "asgiref.sync",
        "description": "asgiref.sync",
        "isExtraImport": true,
        "detail": "asgiref.sync",
        "documentation": {}
    },
    {
        "label": "MessageSerializers",
        "importPath": "chat.serializers",
        "description": "chat.serializers",
        "isExtraImport": true,
        "detail": "chat.serializers",
        "documentation": {}
    },
    {
        "label": "Message",
        "importPath": "chat.models",
        "description": "chat.models",
        "isExtraImport": true,
        "detail": "chat.models",
        "documentation": {}
    },
    {
        "label": "Chat",
        "importPath": "chat.models",
        "description": "chat.models",
        "isExtraImport": true,
        "detail": "chat.models",
        "documentation": {}
    },
    {
        "label": "JSONRenderer",
        "importPath": "rest_framework.renderers",
        "description": "rest_framework.renderers",
        "isExtraImport": true,
        "detail": "rest_framework.renderers",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "make_password",
        "importPath": "django.contrib.auth.hashers",
        "description": "django.contrib.auth.hashers",
        "isExtraImport": true,
        "detail": "django.contrib.auth.hashers",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "re_path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse_lazy",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "consumers",
        "importPath": "chat",
        "description": "chat",
        "isExtraImport": true,
        "detail": "chat",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "importPath": "djangocha.settings",
        "description": "djangocha.settings",
        "isExtraImport": true,
        "detail": "djangocha.settings",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "HttpRequest",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponseForbidden",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "mark_safe",
        "importPath": "django.utils.safestring",
        "description": "django.utils.safestring",
        "isExtraImport": true,
        "detail": "django.utils.safestring",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "user",
        "importPath": "chat.consumers",
        "description": "chat.consumers",
        "isExtraImport": true,
        "detail": "chat.consumers",
        "documentation": {}
    },
    {
        "label": "FormView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "Max",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "AuthMiddlewareStack",
        "importPath": "channels.auth",
        "description": "channels.auth",
        "isExtraImport": true,
        "detail": "channels.auth",
        "documentation": {}
    },
    {
        "label": "ProtocolTypeRouter",
        "importPath": "channels.routing",
        "description": "channels.routing",
        "isExtraImport": true,
        "detail": "channels.routing",
        "documentation": {}
    },
    {
        "label": "URLRouter",
        "importPath": "channels.routing",
        "description": "channels.routing",
        "isExtraImport": true,
        "detail": "channels.routing",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "chat.routing",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "chat.routing",
        "description": "chat.routing",
        "detail": "chat.routing",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "i18n_patterns",
        "importPath": "django.conf.urls.i18n",
        "description": "django.conf.urls.i18n",
        "isExtraImport": true,
        "detail": "django.conf.urls.i18n",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "chat.migrations.0001_initial",
        "description": "chat.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Message',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "chat.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "chat.migrations.0002_chat",
        "description": "chat.migrations.0002_chat",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('chat', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Chat',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "chat.migrations.0002_chat",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "chat.migrations.0003_message_related_chat",
        "description": "chat.migrations.0003_message_related_chat",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('chat', '0002_chat'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='message',\n            name='related_chat',\n            field=models.ForeignKey(blank=True, default=1, on_delete=django.db.models.deletion.CASCADE, to='chat.chat'),\n            preserve_default=False,",
        "detail": "chat.migrations.0003_message_related_chat",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "chat.migrations.0004_alter_message_related_chat",
        "description": "chat.migrations.0004_alter_message_related_chat",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('chat', '0003_message_related_chat'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='message',\n            name='related_chat',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='chat.chat'),\n        ),",
        "detail": "chat.migrations.0004_alter_message_related_chat",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "chat.migrations.0005_chat_allowed_users",
        "description": "chat.migrations.0005_chat_allowed_users",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('chat', '0004_alter_message_related_chat'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='chat',\n            name='allowed_users',\n            field=models.ManyToManyField(blank=True, related_name='allowed_chats', to=settings.AUTH_USER_MODEL),",
        "detail": "chat.migrations.0005_chat_allowed_users",
        "documentation": {}
    },
    {
        "label": "ChatAdmin",
        "kind": 6,
        "importPath": "chat.admin",
        "description": "chat.admin",
        "peekOfCode": "class ChatAdmin(admin.ModelAdmin):\n    list_display = ('roomname', 'get_members')  # نمایش نام اتاق و اعضا\n    search_fields = ('roomname',)  # قابلیت جستجو بر اساس نام اتاق\n    filter_horizontal = ('members',)  # اضافه کردن رابط گرافیکی برای مدیریت اعضا\n    def get_members(self, obj):\n        return \", \".join([member.username for member in obj.members.all()])  # نمایش اعضا به صورت لیست\n    get_members.short_description = 'اعضا'\n@admin.register(Message)\nclass MessageAdmin(admin.ModelAdmin):\n    list_display = ('author', 'related_chat', 'time', 'short_text')  # نمایش اطلاعات پیام",
        "detail": "chat.admin",
        "documentation": {}
    },
    {
        "label": "MessageAdmin",
        "kind": 6,
        "importPath": "chat.admin",
        "description": "chat.admin",
        "peekOfCode": "class MessageAdmin(admin.ModelAdmin):\n    list_display = ('author', 'related_chat', 'time', 'short_text')  # نمایش اطلاعات پیام\n    search_fields = ('author__username', 'related_chat__roomname', 'text')  # جستجو بر اساس نویسنده، نام چت و متن پیام\n    list_filter = ('time', 'related_chat')  # فیلتر بر اساس زمان و چت مرتبط\n    list_editable = ('related_chat',)  # امکان ویرایش سریع چت مرتبط از لیست\n    def short_text(self, obj):\n        return obj.text[:50] + \"...\" if len(obj.text) > 50 else obj.text  # نمایش کوتاه شده متن پیام\n    short_text.short_description = 'متن کوتاه'",
        "detail": "chat.admin",
        "documentation": {}
    },
    {
        "label": "ChatConfig",
        "kind": 6,
        "importPath": "chat.apps",
        "description": "chat.apps",
        "peekOfCode": "class ChatConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'chat'",
        "detail": "chat.apps",
        "documentation": {}
    },
    {
        "label": "ChatConsumer",
        "kind": 6,
        "importPath": "chat.consumers",
        "description": "chat.consumers",
        "peekOfCode": "class ChatConsumer(WebsocketConsumer):\n    def new_message(self, data):\n        message = data['message']\n        username = data['username']\n        room_name = data['roomname']\n        self.notif(data)\n        chat_ma =Chat.objects.get(roomname=room_name)\n        us = user.objects.filter(username=username).first()\n        mess:Message = Message.objects.create(author=us,text=message,related_chat=chat_ma)\n        result = self.message_serializer([mess])",
        "detail": "chat.consumers",
        "documentation": {}
    },
    {
        "label": "user",
        "kind": 5,
        "importPath": "chat.consumers",
        "description": "chat.consumers",
        "peekOfCode": "user = get_user_model()\nclass ChatConsumer(WebsocketConsumer):\n    def new_message(self, data):\n        message = data['message']\n        username = data['username']\n        room_name = data['roomname']\n        self.notif(data)\n        chat_ma =Chat.objects.get(roomname=room_name)\n        us = user.objects.filter(username=username).first()\n        mess:Message = Message.objects.create(author=us,text=message,related_chat=chat_ma)",
        "detail": "chat.consumers",
        "documentation": {}
    },
    {
        "label": "UserForm",
        "kind": 6,
        "importPath": "chat.forms",
        "description": "chat.forms",
        "peekOfCode": "class UserForm(forms.ModelForm):\n    password_confirm = forms.CharField(\n        label=\"تکرار رمز عبور\",\n        widget=forms.PasswordInput(),\n        error_messages={\n            \"required\": \"وارد کردن تکرار رمز عبور الزامی است.\",\n        },\n    )\n    class Meta:\n        model = User  # یا مدل سفارشی شما",
        "detail": "chat.forms",
        "documentation": {}
    },
    {
        "label": "user",
        "kind": 5,
        "importPath": "chat.forms",
        "description": "chat.forms",
        "peekOfCode": "user = get_user_model()\nfrom django.contrib.auth.hashers import make_password\nfrom django import forms\nfrom django.contrib.auth.models import User  # یا مدل سفارشی شما\nclass UserForm(forms.ModelForm):\n    password_confirm = forms.CharField(\n        label=\"تکرار رمز عبور\",\n        widget=forms.PasswordInput(),\n        error_messages={\n            \"required\": \"وارد کردن تکرار رمز عبور الزامی است.\",",
        "detail": "chat.forms",
        "documentation": {}
    },
    {
        "label": "Chat",
        "kind": 6,
        "importPath": "chat.models",
        "description": "chat.models",
        "peekOfCode": "class Chat(models.Model):\n    roomname = models.CharField(blank=True,max_length=200)\n    members = models.ManyToManyField(user,null=True,blank=True)\n    allowed_users = models.ManyToManyField(user, related_name='allowed_chats', blank=True)\n    def __str__(self):\n        return  self.roomname\nclass Message(models.Model):\n    author = models.ForeignKey(user, verbose_name='نویسنده', on_delete=models.CASCADE)\n    text = models.TextField(verbose_name='متن')\n    related_chat = models.ForeignKey(Chat,on_delete=models.CASCADE,blank=True,null=True)",
        "detail": "chat.models",
        "documentation": {}
    },
    {
        "label": "Message",
        "kind": 6,
        "importPath": "chat.models",
        "description": "chat.models",
        "peekOfCode": "class Message(models.Model):\n    author = models.ForeignKey(user, verbose_name='نویسنده', on_delete=models.CASCADE)\n    text = models.TextField(verbose_name='متن')\n    related_chat = models.ForeignKey(Chat,on_delete=models.CASCADE,blank=True,null=True)\n    time = models.DateTimeField(auto_now_add=True, verbose_name='تاریخ')\n    @classmethod\n    def last_message(cls,room_name):\n        return cls.objects.filter(related_chat__roomname = room_name).order_by('time')\n    def __str__(self):\n        return self.author.username",
        "detail": "chat.models",
        "documentation": {}
    },
    {
        "label": "user",
        "kind": 5,
        "importPath": "chat.models",
        "description": "chat.models",
        "peekOfCode": "user = get_user_model()\nclass Chat(models.Model):\n    roomname = models.CharField(blank=True,max_length=200)\n    members = models.ManyToManyField(user,null=True,blank=True)\n    allowed_users = models.ManyToManyField(user, related_name='allowed_chats', blank=True)\n    def __str__(self):\n        return  self.roomname\nclass Message(models.Model):\n    author = models.ForeignKey(user, verbose_name='نویسنده', on_delete=models.CASCADE)\n    text = models.TextField(verbose_name='متن')",
        "detail": "chat.models",
        "documentation": {}
    },
    {
        "label": "websocket_urlpatterns",
        "kind": 5,
        "importPath": "chat.routing",
        "description": "chat.routing",
        "peekOfCode": "websocket_urlpatterns = [\n    re_path(r\"ws/chat/(?P<room_name>\\w+)/$\", consumers.ChatConsumer.as_asgi()),\n]",
        "detail": "chat.routing",
        "documentation": {}
    },
    {
        "label": "MessageSerializers",
        "kind": 6,
        "importPath": "chat.serializers",
        "description": "chat.serializers",
        "peekOfCode": "class MessageSerializers(serializers.ModelSerializer):\n    class Meta:\n        model = Message\n        fields = ['__str__', 'text', 'time']",
        "detail": "chat.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "chat.urls",
        "description": "chat.urls",
        "peekOfCode": "urlpatterns = [\n    path('wsg/',index.as_view(),name='index'),\n    path('<str:room_name>/',RoomName, name='room'),\n    path('login',views.LoginView.as_view(template_name='page/chat/login.html',),name='login'),\n    path('logout', logout_view, name='logout'),\n    path('register', formclass.as_view(), name='register'),\n    ]",
        "detail": "chat.urls",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 6,
        "importPath": "chat.views",
        "description": "chat.views",
        "peekOfCode": "class index(LoginRequiredMixin, ListView):\n    model = Chat\n    template_name = 'page/chat/index.html'\n    context_object_name = 'group'\n    def get_queryset(self):\n        \"\"\"\n        Override the get_queryset method to filter the chats based on the current user.\n        \"\"\"\n        user = self.request.user\n        queryset = super().get_queryset()",
        "detail": "chat.views",
        "documentation": {}
    },
    {
        "label": "formclass",
        "kind": 6,
        "importPath": "chat.views",
        "description": "chat.views",
        "peekOfCode": "class formclass(FormView):\n    form_class = UserForm\n    template_name = 'page/chat/register.html'\n    success_url = reverse_lazy('login')\n    def form_valid(self, form):\n        # ذخیره کاربر\n        form.save()\n        return super().form_valid(form)\ndef logout_view(request):\n    logout(request)",
        "detail": "chat.views",
        "documentation": {}
    },
    {
        "label": "RoomName",
        "kind": 2,
        "importPath": "chat.views",
        "description": "chat.views",
        "peekOfCode": "def RoomName(request:HttpRequest,room_name):\n    user = request.user\n    try:\n        # تلاش برای پیدا کردن اتاق چت\n        chat_room = Chat.objects.get(roomname=room_name)\n    except Chat.DoesNotExist:\n        # اگر اتاق پیدا نشد، ایجاد آن\n        chat_room = Chat.objects.create(roomname=room_name)\n    # اضافه کردن کاربر به اعضای اتاق\n    if user in chat_room.allowed_users.all():",
        "detail": "chat.views",
        "documentation": {}
    },
    {
        "label": "logout_view",
        "kind": 2,
        "importPath": "chat.views",
        "description": "chat.views",
        "peekOfCode": "def logout_view(request):\n    logout(request)\n    return redirect('login')",
        "detail": "chat.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "djangocha.asgi",
        "description": "djangocha.asgi",
        "peekOfCode": "application = ProtocolTypeRouter({\n    \"http\": get_asgi_application(),\n    \"websocket\": AuthMiddlewareStack(\n        URLRouter(chat.routing.websocket_urlpatterns)\n    ),\n})",
        "detail": "djangocha.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "djangocha.settings",
        "description": "djangocha.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-4zn-k_z=#c28^g6!i=*w_!81_8v_s)l075-$it56l&&z%&)qm4'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "djangocha.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "djangocha.settings",
        "description": "djangocha.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-4zn-k_z=#c28^g6!i=*w_!81_8v_s)l075-$it56l&&z%&)qm4'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'jazzmin',\n    'channels',\n    'django.contrib.admin',\n    'django.contrib.auth',",
        "detail": "djangocha.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "djangocha.settings",
        "description": "djangocha.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'jazzmin',\n    'channels',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "djangocha.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "djangocha.settings",
        "description": "djangocha.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'jazzmin',\n    'channels',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "djangocha.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "djangocha.settings",
        "description": "djangocha.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'jazzmin',\n    'channels',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'panel_sms',",
        "detail": "djangocha.settings",
        "documentation": {}
    },
    {
        "label": "LOGIN_REDIRECT_URL",
        "kind": 5,
        "importPath": "djangocha.settings",
        "description": "djangocha.settings",
        "peekOfCode": "LOGIN_REDIRECT_URL = '/chat/wsg/'  # مسیر دلخواه شما\n# LOGIN_URL = '/login'  \nJAZZMIN_SETTINGS = {\n    # سایت و برند\n    \"site_title\": \"Library Admin\",\n    \"site_header\": \"Library Management\",\n    \"site_brand\": \"Library Admin\",\n    \"site_logo\": \"books/img/logo.png\",  # مسیر لوگوی دلخواه\n    \"site_logo_classes\": \"img-circle\",\n    \"site_icon\": \"books/img/favicon.ico\",  # آیکون مرورگر",
        "detail": "djangocha.settings",
        "documentation": {}
    },
    {
        "label": "JAZZMIN_SETTINGS",
        "kind": 5,
        "importPath": "djangocha.settings",
        "description": "djangocha.settings",
        "peekOfCode": "JAZZMIN_SETTINGS = {\n    # سایت و برند\n    \"site_title\": \"Library Admin\",\n    \"site_header\": \"Library Management\",\n    \"site_brand\": \"Library Admin\",\n    \"site_logo\": \"books/img/logo.png\",  # مسیر لوگوی دلخواه\n    \"site_logo_classes\": \"img-circle\",\n    \"site_icon\": \"books/img/favicon.ico\",  # آیکون مرورگر\n    \"welcome_sign\": \"Welcome to the Library Admin Panel\",\n    \"copyright\": \"© 2025 Library Inc\",  # فعال‌سازی انتخاب زبان",
        "detail": "djangocha.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "djangocha.settings",
        "description": "djangocha.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.locale.LocaleMiddleware',\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]",
        "detail": "djangocha.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "djangocha.settings",
        "description": "djangocha.settings",
        "peekOfCode": "ROOT_URLCONF = 'djangocha.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / \"templates\"],  # مسیر پوشه templates\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "djangocha.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "djangocha.settings",
        "description": "djangocha.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / \"templates\"],  # مسیر پوشه templates\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "djangocha.settings",
        "documentation": {}
    },
    {
        "label": "ASGI_APPLICATION",
        "kind": 5,
        "importPath": "djangocha.settings",
        "description": "djangocha.settings",
        "peekOfCode": "ASGI_APPLICATION = \"djangocha.asgi.application\"\nCHANNEL_LAYERS = {\n    \"default\": {\n        \"BACKEND\": \"channels_redis.core.RedisChannelLayer\",\n        \"CONFIG\": {\n            \"hosts\": [(\"localhost\", 6379)],\n        },\n    },\n}\n# Database",
        "detail": "djangocha.settings",
        "documentation": {}
    },
    {
        "label": "CHANNEL_LAYERS",
        "kind": 5,
        "importPath": "djangocha.settings",
        "description": "djangocha.settings",
        "peekOfCode": "CHANNEL_LAYERS = {\n    \"default\": {\n        \"BACKEND\": \"channels_redis.core.RedisChannelLayer\",\n        \"CONFIG\": {\n            \"hosts\": [(\"localhost\", 6379)],\n        },\n    },\n}\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases",
        "detail": "djangocha.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "djangocha.settings",
        "description": "djangocha.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "djangocha.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "djangocha.settings",
        "description": "djangocha.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "djangocha.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGES",
        "kind": 5,
        "importPath": "djangocha.settings",
        "description": "djangocha.settings",
        "peekOfCode": "LANGUAGES = [\n    ('en', ('English')),\n    ('fa', ('فارسی')),  # اضافه کردن زبان فارسی\n]\nLANGUAGE_CODE = 'fa'  # زبان پیش‌فرض فارسی\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/",
        "detail": "djangocha.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "djangocha.settings",
        "description": "djangocha.settings",
        "peekOfCode": "LANGUAGE_CODE = 'fa'  # زبان پیش‌فرض فارسی\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# STATICFILES_DIRS = [\n#     os.path.join(BASE_DIR, \"static\"),\n# ]",
        "detail": "djangocha.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "djangocha.settings",
        "description": "djangocha.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# STATICFILES_DIRS = [\n#     os.path.join(BASE_DIR, \"static\"),\n# ]\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')",
        "detail": "djangocha.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "djangocha.settings",
        "description": "djangocha.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# STATICFILES_DIRS = [\n#     os.path.join(BASE_DIR, \"static\"),\n# ]\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\n# STATIC_ROOT = os.path.join(BASE_DIR, 'static')",
        "detail": "djangocha.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "djangocha.settings",
        "description": "djangocha.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# STATICFILES_DIRS = [\n#     os.path.join(BASE_DIR, \"static\"),\n# ]\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\n# STATIC_ROOT = os.path.join(BASE_DIR, 'static')\n# Default primary key field type",
        "detail": "djangocha.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "djangocha.settings",
        "description": "djangocha.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# STATICFILES_DIRS = [\n#     os.path.join(BASE_DIR, \"static\"),\n# ]\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\n# STATIC_ROOT = os.path.join(BASE_DIR, 'static')\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "djangocha.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "djangocha.settings",
        "description": "djangocha.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, 'static')\n# STATIC_ROOT = os.path.join(BASE_DIR, 'static')\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "djangocha.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "djangocha.settings",
        "description": "djangocha.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "djangocha.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "djangocha.urls",
        "description": "djangocha.urls",
        "peekOfCode": "urlpatterns = [\n    path('api-auth/', include('rest_framework.urls')),\n    path('home/', include('panel_sms.urls')),\n    path('chat/', include('chat.urls')),\n    # سایر URLهای عمومی\n] + static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)\n# اضافه کردن URLهای مربوط به زبان‌ها\nurlpatterns += i18n_patterns(\n    path('admin/', admin.site.urls),\n    # سایر URLها که می‌خواهید به i18n اضافه شوند",
        "detail": "djangocha.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "djangocha.wsgi",
        "description": "djangocha.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "djangocha.wsgi",
        "documentation": {}
    },
    {
        "label": "PanelSmsConfig",
        "kind": 6,
        "importPath": "panel_sms.apps",
        "description": "panel_sms.apps",
        "peekOfCode": "class PanelSmsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'panel_sms'",
        "detail": "panel_sms.apps",
        "documentation": {}
    },
    {
        "label": "MyConsumer",
        "kind": 6,
        "importPath": "panel_sms.consumers",
        "description": "panel_sms.consumers",
        "peekOfCode": "class MyConsumer(WebSocketConsumer):\n    def connect(self):\n        self.accept()\n    def disconnect(self,close_code):\n        return\n    def receive(self, text_data):\n        print(text_data)\n        self.send(text_data=text_data+'- hello world')",
        "detail": "panel_sms.consumers",
        "documentation": {}
    },
    {
        "label": "websocket_urlpatterns",
        "kind": 5,
        "importPath": "panel_sms.routing",
        "description": "panel_sms.routing",
        "peekOfCode": "websocket_urlpatterns = [\n    path('ws/',MyConsumer),  # Replace with your consumer class name\n]",
        "detail": "panel_sms.routing",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "panel_sms.urls",
        "description": "panel_sms.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"websocket\",HomeView.as_view(),name='websocket')\n]",
        "detail": "panel_sms.urls",
        "documentation": {}
    },
    {
        "label": "HomeView",
        "kind": 6,
        "importPath": "panel_sms.views",
        "description": "panel_sms.views",
        "peekOfCode": "class HomeView(views.View):\n    def get(self, request):\n        products = [{'product':'mobile','price':30},{'product':'laptap','price':3320},{'product':'tablet','price':3000},{'product':'test','price':120}]\n        return render(request, 'home.html',context={'products':products})",
        "detail": "panel_sms.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'djangocha.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]